!!!!!!!!!!!!!!!
!! ATTRIBUTE CATEGORIES
!!!!!!!!!!!!!!!

number = (ND sg) sg pl sp ND;
do_number = (ND sg) sg pl sp ND;
gender = (GD m) m f mf GD nt;
det_type = def ind dem itg;
tense = pres past fut ifi pri fti pprs;
absence = abs;
possession = px1sg px2sg px3sg px11pl px12pl px2pl px3pl ;
person = p1 p2 p3;
do_person = p3;
case = loc;
transitivity = iv tv;
animacy = aa nn;
subj = s_sg s_1sg s_2sg s_3sg s_11pl s_12pl s_2pl s_3pl s_pl;
obj = o_sg o_1sg o_2sg o_3sg o_11pl o_12pl o_2pl o_3pl o_pl;
polarity = neg;

!!!!!!!!!!!!!!!
!! OUTPUT PATTERNS
!!!!!!!!!!!!!!!

n: _.number;  
adj: _.gender.number;
det_default: _.det_type;
det_def: _.det_type.number;
v_default: _.tense;
v_pres3: _.tense.person.number;

DP: _.animacy.case.number.possession.absence;
NP: _.animacy.case.number.possession.absence;
vP: _.transitivity.polarity.animacy.subj.obj;
VP: _.transitivity.polarity.tense.subj.obj;
S: _.transitivity.polarity.tense.subj.obj;

!!!!!!!!!!!!!!!
!! TAG-REWRITE RULES
!!!!!!!!!!!!!!!

tense > tense : ifi past, pri pres, fti fut;
possession > person : px1sg p1, px2sg p2, px3sg p3, px11pl p1, px12pl p1, px2pl p2, px3pl p3;
possession > number : px1sg sg, px2sg sp, px3sg sg, px11pl pl, px12pl pl, px2pl sp, px3pl pl;
subj > person : s_sg p3, s_1sg p1, s_2sg p2, s_3sg p3, s_11pl p1, s_12pl p1, s_2pl p2, s_3pl p3, s_pl p3;
subj > number : s_sg sg, s_1sg sg, s_2sg sg, s_3sg sg, s_11pl pl, s_12pl pl, s_2pl pl, s_3pl pl, s_pl pl;
subj > gender : s_sg nt, s_1sg mf, s_2sg mf, s_3sg m, s_11pl mf, s_12pl mf, s_2pl mf, s_3pl mf, s_pl mf;
obj > person : o_sg p3, o_1sg p1, o_2sg p2, o_3sg p3, o_11pl p1, o_12pl p1, o_2pl p2, o_3pl p3, o_pl p3;
obj > number : o_sg sg, o_1sg sg, o_2sg sg, o_3sg sg, o_11pl pl, o_12pl pl, o_2pl pl, o_3pl pl, o_pl pl;
obj > gender : o_sg nt, o_1sg mf, o_2sg mf, o_3sg m, o_11pl mf, o_12pl mf, o_2pl mf, o_3pl mf, o_pl mf;

subj > do_person : s_sg p3, s_1sg "", s_2sg "", s_3sg p3, s_11pl "", s_12pl "", s_2pl "", s_3pl "", s_pl "";
subj > do_number : s_sg sg, s_1sg "", s_2sg "", s_3sg sg, s_11pl "", s_12pl "", s_2pl "", s_3pl "", s_pl "";

!!!!!!!!!!!!!!!
!! MACROS
!!!!!!!!!!!!!!!

det: (if (1.det_type = def or 1.det_type = ind)
         1(det_def)
      else
         1(det_default));

v: (if (1.tense = pres and (1.subj = s_pl or 1.subj = s_sg or 1.subj = s_3sg )) 
         1(v_pres3) 
      else
         1(v_default));

vbdo: (if (1.tense = pres and (1.subj = s_pl or 1.subj = s_sg or 1.subj = s_3sg )) 
         1(v_pres3) 
      else
         1(v_default));

!!!!!!!!!!!!!!!
!! REDUCTION RULES
!!!!!!!!!!!!!!!


! Example rule:
! Input:  ^ראש<n><m><sg>/hovud<n><nt><sg>$ ^גדול<adj><m><sg>/stor<adj><m><sg>$
! Output: ^stor<adj><nt><sg>$ ^hovud<n><nt><sg>$
! NP -> n.$number adj { 2[gender=1.gender, number=1.number] _ 1 } ;



! Rule for absence suffix: Noun phrase in English (noun w/ adjective "late") 
! gets information from the noun phrase in Munsee (noun w/ absence suffix "aya")
! (umu) nŭmoxoomsáya → (eng) my late grandfather 
! Input: ^moxóomus<n><aa><px1sg><abs> 
! Output: ^prpers<det><pos><p1><mf><sg> late<adj><sint> grandfather<n><sg>

NP -> %n (if (1.absence = abs)
      { late@adj.sint _ %1}
      else {%1} );

DP -> %NP (if (1.possession in possession)
      { prpers@det.pos.[1.possession>person].mf.[1.possession>number] _ %1}
      else {%1} );




! Rule for verb phrases
! Verb phrases in English get information from verbs in Munsee
! (umu) mah stem-suffix -> (eng) do not stem
! Input: mah <adv> wiinéewi <v><iv><nn><neg><s_3sg>
! Output: does not snow

vP -> mah@adv %v.*.neg {do@vbdo.pres.[2.subj>do_person].[2.subj>do_number] _ 
                  not@adv _ 
                  %2[tense=inf]} |
      %v.* ?(1.polarity not = neg) [$person=1.subj>person,$number=1.subj>number] {
                  %1[tense=pres,lemcase=aa]} ;

VP -> %vP.tv.aa DP.aa {%1 _ 2} |
      %vP.tv.nn {%1 _ prpers@prn.obj.p3.[1.obj>gender].[1.obj>number]} |
      %vP.tv.nn DP.nn {%1 _ 2} |
      %vP.iv {%1};

S -> DP %VP {1 _ %2} |
     %VP {prpers@prn.subj.[1.subj>person].[1.subj>gender].[1.subj>number] _ %1} ;




! Resources:
! https://wiki.apertium.org/wiki/Apertium-recursive
! https://wiki.apertium.org/wiki/Apertium-recursive/Formalism
! https://wiki.apertium.org/wiki/Apertium-recursive/Cookbook
